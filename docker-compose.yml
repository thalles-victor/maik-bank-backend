version: '3.8'

services:
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 80:80
      - 8080:80
    networks:
      - maik-network
    depends_on:
      - maik-bank-backend-server

  maik-bank-backend-server:
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .docker.env
    environment:
      NODE_ENV: production
    volumes:
      # não estava funionando mas não acho que seja isso
      # coloquei so para garantir que ele vá para o container.
      - ./swagger.json:/app/swagger.json
    deploy:
      replicas: 3
      resources:
        limits:
          cpus: '0.5'
          memory: '256M'
      restart_policy:
        condition: on-failure
    networks:
      - maik-network
    depends_on:
      - maik-bank-pg-server
      - maik-bank-redis-server

  maik-bank-pg-server:
    image: postgres:15-alpine
    container_name: maik-bank-pg-server

    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - maik-bank-postgres_data:/var/lib/postgresql/data
    networks:
      - maik-network

  maik-bank-redis-server:
    image: redis:7-alpine
    container_name: maik-bank-redis-server
    command: >
      --requirepass ${REDIS_PASSWORD}
    ports:
      - '6379:6379'
    volumes:
      - maik-bank-redis_data:/data
    networks:
      - maik-network

volumes:
  maik-bank-postgres_data:
  maik-bank-redis_data:

networks:
  maik-network:
    driver: bridge
